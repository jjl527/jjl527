sudo apt update && sudo apt upgrade -y
sudo apt install -y python3-opencv libzbar0 libzbar-dev python3-pip
pip3 install pyzbar numpy Pillow

git clone https://github.com/waveshare/LCD-show.git
cd LCD-show/
sudo ./LCD35-show

import cv2
import numpy as np
from pyzbar import pyzbar
from PIL import Image, ImageDraw, ImageFont
import time

# 初始化摄像头
camera = cv2.VideoCapture(0)
camera.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
camera.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

# LCD初始化（适配Waveshare 3.5英寸）
try:
    from waveshare_epd import epd3in5
    epd = epd3in5.EPD()
    epd.init()
    epd.Clear()
    use_epd = True
except ImportError:
    use_epd = False
    print("未检测到电子墨水屏驱动，将在窗口显示")

# 字体设置
font = cv2.FONT_HERSHEY_SIMPLEX
font_scale = 0.8
font_color = (0, 255, 0)  # 绿色
line_type = 2

def display_on_epd(image, text):
    """在电子墨水屏上显示图像和文本"""
    if not use_epd:
        return
    
    # 调整图像大小适应屏幕
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    pil_image = Image.fromarray(image).resize((epd.height, epd.width))
    
    # 创建绘图对象
    draw = ImageDraw.Draw(pil_image)
    
    # 添加文本
    try:
        font = ImageFont.truetype('DejaVuSans.ttf', 20)
    except:
        font = ImageFont.load_default()
    
    draw.text((10, 10), text, font=font, fill=0)
    
    # 显示图像
    epd.display(epd.getbuffer(pil_image))
    time.sleep(1)

def main():
    print("二维码识别程序已启动...")
    print("按'q'键退出程序")
    
    while True:
        # 捕获视频帧
        ret, frame = camera.read()
        if not ret:
            print("无法获取视频帧")
            break
        
        # 转换为灰度图像进行二维码检测
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        
        # 检测并解码二维码
        barcodes = pyzbar.decode(gray)
        
        # 处理检测到的二维码
        for barcode in barcodes:
            # 提取二维码位置
            (x, y, w, h) = barcode.rect
            
            # 在图像上绘制矩形框
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)
            
            # 解码数据
            barcode_data = barcode.data.decode("utf-8")
            barcode_type = barcode.type
            
            # 在图像上绘制二维码数据
            text = f"{barcode_type}: {barcode_data}"
            cv2.putText(frame, text, (x, y - 10), 
                        font, font_scale, font_color, line_type)
            
            # 打印到终端
            print(f"检测到二维码: {text}")
            
            # 在电子墨水屏上显示
            if use_epd:
                display_on_epd(frame, text)
        
        # 显示结果
        if use_epd:
            # 电子墨水屏模式下不显示实时视频
            pass
        else:
            # 在窗口中显示
            cv2.imshow("QR Code Detection", frame)
            
            # 按'q'键退出
            if cv2.waitKey(1) & 0xFF == ord('q'):
                break
    
    # 清理资源
    camera.release()
    if not use_epd:
        cv2.destroyAllWindows()
    if use_epd:
        epd.Clear()
        epd.sleep()

if __name__ == "__main__":
    main()
