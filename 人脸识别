import cv2
import numpy as np
import pickle

# 1. 加载分类器和模型
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_alt2.xml')
recognizer = cv2.face.LBPHFaceRecognizer_create()
recognizer.read("./mytrainer.xml")

# 2. 加载标签
labels = {}
with open("label.pickle", "rb") as f:
    origin_labels = pickle.load(f)
    labels = {v: k for k, v in origin_labels.items()}

# 3. 打开摄像头
cap = cv2.VideoCapture(0)
if not cap.isOpened():
    print("错误：无法打开摄像头！")
    exit()

try:
    while True:
        # 读取帧
        ret, frame = cap.read()
        if not ret:
            print("错误：无法读取视频帧！")
            break
        
        # 转灰度
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        
        # 检测人脸
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)
        
        # 识别处理
        for (x, y, w, h) in faces:
            gray_roi = gray[y:y+h, x:x+w]
            id_, conf = recognizer.predict(gray_roi)
            
            if conf >= 60 and id_ in labels:  
                # 画框和文字
                cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)
                cv2.putText(frame, str(labels[id_]), (x-15, y-15), 
                           cv2.FONT_HERSHEY_SIMPLEX, 2, (255, 0, 0), 2)
        
        # 显示结果（适配无桌面环境）
        cv2.imshow("Result", frame)
        
        # 按键退出（按 q 或关窗口）
        key = cv2.waitKey(1) 
        if key & 0xFF == ord('q') or cv2.getWindowProperty("Result", cv2.WND_PROP_VISIBLE) < 1:
            break  

except Exception as e:
    print("程序异常：", e)

finally:
    # 释放资源
    cap.release()
    cv2.destroyAllWindows()
